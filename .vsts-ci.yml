variables:
  Build.Repository.Clean: true
  targetFramework: netcoreapp2.0
  _HelixType: build/product
  _HelixSource: pr/dotnet/arcade-minimalci-sample/$(Build.SourceBranch)

trigger:
- master

# To be added in the future when VSTS supports this feature
# pr:
# - master

# Three phases for each of the three OSes we want to run on
phases:
- template: /eng/common/templates/phases/base.yml
  parameters:
    agentOs: Windows_NT
    name: Windows_NT
    enableTelemetry: true
    queue:
      name: Helix
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng\common\cibuild.cmd
        -configuration $(_BuildConfig)
        -prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        projects: HelloTests\helixpublish.proj
        custom: msbuild
        arguments: '/t:test /p:HelixTargetQueues=Windows.10.Amd64.Open;Windows.7.Amd64.Open;windows.10.arm64.open;Windows.81.Amd64.Open'
      displayName: Send tests job to Helix
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    - script: powershell .\eng\helix-wait.ps1
      displayName: Wait for test completion
      timeoutInMinutes: 60
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/phases/base.yml
  parameters:
    agentOs: OSX
    name: OSX
    enableTelemetry: true
    queue:
      name: Hosted macOS Preview
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        projects: HelloTests/helixpublish.proj
        custom: msbuild
        arguments: '/t:test /p:HelixTargetQueues=OSX.1013.amd64.Open;OSX.1012.amd64.Open'
      displayName: Send tests job to Helix
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    - script: powershell ./eng/helix-wait.sh
      displayName: Wait for test completion
      timeoutInMinutes: 60
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/phases/base.yml
  parameters:
    agentOs: Linux
    name: Linux
    enableTelemetry: true
    queue:
      name: DotNetCore-Linux
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - task: DotNetCoreInstaller@0
      inputs:
        version: 2.1.401
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - task: DotNetCoreCLI@2
      inputs:
        command: custom
        projects: HelloTests/helixpublish.proj
        custom: msbuild
        arguments: '/t:test /p:HelixTargetQueues=ubuntu.1404.amd64.open;centos.74.amd64.open;RedHat.74.Amd64.Open;'
      displayName: Send tests job to Helix
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    - script: powershell ./eng/helix-wait.sh
      displayName: Wait for test completion
      timeoutInMinutes: 60
      env:
        HelixAccessToken: $(HelixTestAccessToken)
      condition: eq(variables['_HelixBuildConfig'], 'Debug')
    variables:
      _HelixBuildConfig: $(_BuildConfig)
      # Run build in docker container
      _PREVIEW_VSTS_DOCKER_IMAGE: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304
