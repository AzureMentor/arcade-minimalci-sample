variables:
  Build.Repository.Clean: true
  _HelixType: build/product
  _HelixSource: pr/dotnet/arcade-minimalci-sample/$(Build.SourceBranch)
  _HelixTestType: test/product
resources:
  containers:
  - container: LinuxContainer
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304

# CI and PR triggers
trigger:
- master
- switch-to-test-pool
pr:
- master

# Three phases for each of the three OSes we want to run on
phases:
- template: /eng/common/templates/phases/base.yml
  parameters:
    name: Windows_NT
    enableTelemetry: true
    queue:
      name: dotnet-external-temp
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng\common\cibuild.cmd
        -configuration $(_BuildConfig)
        -prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/helix-publish.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: Windows.10.Amd64.Open;Windows.7.Amd64.Open
        HelixAccessToken: $(BotAccount-dotnet-github-anon-kaonashi-bot-helix-token)
        XUnitProjects: $(Build.SourcesDirectory)/HelloTests/HelloTests.csproj
        XUnitTargetFramework: netcoreapp2.0
        XUnitRunnerVersion: 2.4.1
        IncludeDotNetCli: true
        DotNetCliPackageType: sdk
        DotNetCliVersion: 2.1.403
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/phases/base.yml
  parameters:
    name: OSX
    enableTelemetry: true
    queue:
      name: Hosted macOS Preview
      parallel: 99
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/helix-publish.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: OSX.1012.Amd64
        HelixAccessToken: $(BotAccount-dotnet-github-anon-kaonashi-bot-helix-token)
        XUnitProjects: $(Build.SourcesDirectory)/HelloTests/HelloTests.csproj
        XUnitTargetFramework: netcoreapp2.0
        XUnitRunnerVersion: 2.4.1
        IncludeDotNetCli: true
        DotNetCliPackageType: sdk
        DotNetCliVersion: 2.1.403
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
        condition: eq(variables['_BuildConfig'], 'Debug')
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)

- template: /eng/common/templates/phases/base.yml
  parameters:
    name: Linux
    enableTelemetry: true
    queue:
      name: Hosted Ubuntu 1604
      parallel: 99
      container: LinuxContainer
      matrix:
        debug_configuration:
          _BuildConfig: Debug
        release_configuration:
          _BuildConfig: Release
    steps:
    - task: DotNetCoreInstaller@0
      inputs:
        version: 2.1.401
    - script: eng/common/cibuild.sh
        --configuration $(_BuildConfig)
        --prepareMachine
      name: Build
      displayName: Build
      condition: succeeded()
    - template: /eng/common/templates/steps/helix-publish.yml
      parameters:
        HelixSource: $(_HelixSource)
        HelixType: $(_HelixTestType)
        HelixTargetQueues: Debian.9.Amd64.Open;Fedora.27.Amd64.Open;RedHat.74.Amd64.Open;Ubuntu.1604.Amd64.Open
        HelixAccessToken: $(BotAccount-dotnet-github-anon-kaonashi-bot-helix-token)
        XUnitProjects: $(Build.SourcesDirectory)/HelloTests/HelloTests.csproj
        XUnitTargetFramework: netcoreapp2.0
        XUnitRunnerVersion: 2.4.1
        IncludeDotNetCli: true
        DotNetCliPackageType: sdk
        DotNetCliVersion: 2.1.403
        EnableXUnitReporter: true
        WaitForWorkItemCompletion: true
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs to VSTS
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()
    variables:
      _HelixBuildConfig: $(_BuildConfig)
